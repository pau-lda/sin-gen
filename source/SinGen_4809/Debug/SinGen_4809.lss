
SinGen_4809.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00802800  00802800  00000768  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006f4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000084  00802800  00802800  00000768  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000768  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000798  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  000007d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003431  00000000  00000000  00000820  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000259a  00000000  00000000  00003c51  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005bc  00000000  00000000  000061eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a4  00000000  00000000  000067a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000130fc  00000000  00000000  0000684c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000194  00000000  00000000  00019948  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00019adc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00005137  00000000  00000000  00019b14  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__ctors_end>
   4:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   8:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
   c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  10:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  14:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  18:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  1c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  20:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  24:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__vector_9>
  28:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  2c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  30:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  34:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  38:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  3c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  40:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  44:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  48:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  4c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  50:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  54:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  58:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  5c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  60:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  64:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  68:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  6c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  70:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  74:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  78:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  7c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  80:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  84:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  88:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  8c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  90:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  94:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  98:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  9c:	0c 94 71 00 	jmp	0xe2	; 0xe2 <__bad_interrupt>
  a0:	05 a8       	ldd	r0, Z+53	; 0x35
  a2:	4c cd       	rjmp	.-1384   	; 0xfffffb3c <__eeprom_end+0xff7efb3c>
  a4:	b2 d4       	rcall	.+2404   	; 0xa0a <_etext+0x316>
  a6:	4e b9       	out	0x0e, r20	; 14
  a8:	38 36       	cpi	r19, 0x68	; 104
  aa:	a9 02       	muls	r26, r25
  ac:	0c 50       	subi	r16, 0x0C	; 12
  ae:	b9 91       	ld	r27, Y+
  b0:	86 88       	ldd	r8, Z+22	; 0x16
  b2:	08 3c       	cpi	r16, 0xC8	; 200
  b4:	a6 aa       	std	Z+54, r10	; 0x36
  b6:	aa 2a       	or	r10, r26
  b8:	be 00       	.word	0x00be	; ????
  ba:	00 00       	nop
  bc:	80 3f       	cpi	r24, 0xF0	; 240

000000be <__ctors_end>:
  be:	11 24       	eor	r1, r1
  c0:	1f be       	out	0x3f, r1	; 63
  c2:	cf ef       	ldi	r28, 0xFF	; 255
  c4:	cd bf       	out	0x3d, r28	; 61
  c6:	df e3       	ldi	r29, 0x3F	; 63
  c8:	de bf       	out	0x3e, r29	; 62

000000ca <__do_clear_bss>:
  ca:	28 e2       	ldi	r18, 0x28	; 40
  cc:	a0 e0       	ldi	r26, 0x00	; 0
  ce:	b8 e2       	ldi	r27, 0x28	; 40
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <.do_clear_bss_start>

000000d2 <.do_clear_bss_loop>:
  d2:	1d 92       	st	X+, r1

000000d4 <.do_clear_bss_start>:
  d4:	a4 38       	cpi	r26, 0x84	; 132
  d6:	b2 07       	cpc	r27, r18
  d8:	e1 f7       	brne	.-8      	; 0xd2 <.do_clear_bss_loop>
  da:	0e 94 3c 01 	call	0x278	; 0x278 <main>
  de:	0c 94 78 03 	jmp	0x6f0	; 0x6f0 <_exit>

000000e2 <__bad_interrupt>:
  e2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000e6 <__vector_9>:

	// Wait for conversion to finish
	while ( !(ADC0.INTFLAGS & ADC_RESRDY_bm) ){;}
	
	return ADC0.RES;
}
  e6:	1f 92       	push	r1
  e8:	0f 92       	push	r0
  ea:	0f b6       	in	r0, 0x3f	; 63
  ec:	0f 92       	push	r0
  ee:	11 24       	eor	r1, r1
  f0:	2f 93       	push	r18
  f2:	8f 93       	push	r24
  f4:	9f 93       	push	r25
  f6:	ef 93       	push	r30
  f8:	ff 93       	push	r31
  fa:	80 91 00 28 	lds	r24, 0x2800	; 0x802800 <__DATA_REGION_ORIGIN__>
  fe:	90 91 01 28 	lds	r25, 0x2801	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
 102:	01 96       	adiw	r24, 0x01	; 1
 104:	8f 73       	andi	r24, 0x3F	; 63
 106:	90 78       	andi	r25, 0x80	; 128
 108:	97 fd       	sbrc	r25, 7
 10a:	34 c0       	rjmp	.+104    	; 0x174 <__EEPROM_REGION_LENGTH__+0x74>
 10c:	80 93 00 28 	sts	0x2800, r24	; 0x802800 <__DATA_REGION_ORIGIN__>
 110:	90 93 01 28 	sts	0x2801, r25	; 0x802801 <__DATA_REGION_ORIGIN__+0x1>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	fc 01       	movw	r30, r24
 11a:	ec 5f       	subi	r30, 0xFC	; 252
 11c:	f7 4d       	sbci	r31, 0xD7	; 215
 11e:	20 81       	ld	r18, Z
 120:	20 93 02 28 	sts	0x2802, r18	; 0x802802 <_lt1661data>
 124:	81 81       	ldd	r24, Z+1	; 0x01
 126:	8f 70       	andi	r24, 0x0F	; 15
 128:	80 69       	ori	r24, 0x90	; 144
 12a:	80 93 03 28 	sts	0x2803, r24	; 0x802803 <_lt1661data+0x1>
 12e:	90 91 64 04 	lds	r25, 0x0464	; 0x800464 <__TEXT_REGION_LENGTH__+0x7f4464>
 132:	9d 7f       	andi	r25, 0xFD	; 253
 134:	90 93 64 04 	sts	0x0464, r25	; 0x800464 <__TEXT_REGION_LENGTH__+0x7f4464>
 138:	80 93 c4 08 	sts	0x08C4, r24	; 0x8008c4 <__TEXT_REGION_LENGTH__+0x7f48c4>
 13c:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <__TEXT_REGION_LENGTH__+0x7f48c3>
 140:	87 ff       	sbrs	r24, 7
 142:	fc cf       	rjmp	.-8      	; 0x13c <__EEPROM_REGION_LENGTH__+0x3c>
 144:	20 93 c4 08 	sts	0x08C4, r18	; 0x8008c4 <__TEXT_REGION_LENGTH__+0x7f48c4>
 148:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <__TEXT_REGION_LENGTH__+0x7f48c3>
 14c:	87 ff       	sbrs	r24, 7
 14e:	fc cf       	rjmp	.-8      	; 0x148 <__EEPROM_REGION_LENGTH__+0x48>
 150:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <__TEXT_REGION_LENGTH__+0x7f4464>
 154:	82 60       	ori	r24, 0x02	; 2
 156:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <__TEXT_REGION_LENGTH__+0x7f4464>
 15a:	80 e1       	ldi	r24, 0x10	; 16
 15c:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7f4a0b>
 160:	ff 91       	pop	r31
 162:	ef 91       	pop	r30
 164:	9f 91       	pop	r25
 166:	8f 91       	pop	r24
 168:	2f 91       	pop	r18
 16a:	0f 90       	pop	r0
 16c:	0f be       	out	0x3f, r0	; 63
 16e:	0f 90       	pop	r0
 170:	1f 90       	pop	r1
 172:	18 95       	reti
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	80 6c       	ori	r24, 0xC0	; 192
 178:	9f 6f       	ori	r25, 0xFF	; 255
 17a:	01 96       	adiw	r24, 0x01	; 1
 17c:	c7 cf       	rjmp	.-114    	; 0x10c <__EEPROM_REGION_LENGTH__+0xc>

0000017e <initializeSinTable>:
 17e:	cf 93       	push	r28
 180:	df 93       	push	r29
 182:	c4 e0       	ldi	r28, 0x04	; 4
 184:	d8 e2       	ldi	r29, 0x28	; 40
 186:	60 e0       	ldi	r22, 0x00	; 0
 188:	70 e0       	ldi	r23, 0x00	; 0
 18a:	cb 01       	movw	r24, r22
 18c:	11 c0       	rjmp	.+34     	; 0x1b0 <initializeSinTable+0x32>
 18e:	be 01       	movw	r22, r28
 190:	64 50       	subi	r22, 0x04	; 4
 192:	78 42       	sbci	r23, 0x28	; 40
 194:	07 2e       	mov	r0, r23
 196:	00 0c       	add	r0, r0
 198:	88 0b       	sbc	r24, r24
 19a:	99 0b       	sbc	r25, r25
 19c:	0e 94 ef 01 	call	0x3de	; 0x3de <__floatsisf>
 1a0:	2b ed       	ldi	r18, 0xDB	; 219
 1a2:	3f e0       	ldi	r19, 0x0F	; 15
 1a4:	49 e4       	ldi	r20, 0x49	; 73
 1a6:	5d e3       	ldi	r21, 0x3D	; 61
 1a8:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__mulsf3>
 1ac:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <sin>
 1b0:	23 e3       	ldi	r18, 0x33	; 51
 1b2:	33 e3       	ldi	r19, 0x33	; 51
 1b4:	43 e7       	ldi	r20, 0x73	; 115
 1b6:	5f e3       	ldi	r21, 0x3F	; 63
 1b8:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__mulsf3>
 1bc:	20 e0       	ldi	r18, 0x00	; 0
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	40 e8       	ldi	r20, 0x80	; 128
 1c2:	5f e3       	ldi	r21, 0x3F	; 63
 1c4:	0e 94 52 01 	call	0x2a4	; 0x2a4 <__addsf3>
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	40 e0       	ldi	r20, 0x00	; 0
 1ce:	54 e4       	ldi	r21, 0x44	; 68
 1d0:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__mulsf3>
 1d4:	20 e0       	ldi	r18, 0x00	; 0
 1d6:	30 e0       	ldi	r19, 0x00	; 0
 1d8:	40 e8       	ldi	r20, 0x80	; 128
 1da:	50 e4       	ldi	r21, 0x40	; 64
 1dc:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__mulsf3>
 1e0:	0e 94 be 01 	call	0x37c	; 0x37c <__fixunssfsi>
 1e4:	69 93       	st	Y+, r22
 1e6:	79 93       	st	Y+, r23
 1e8:	88 e2       	ldi	r24, 0x28	; 40
 1ea:	c4 38       	cpi	r28, 0x84	; 132
 1ec:	d8 07       	cpc	r29, r24
 1ee:	79 f6       	brne	.-98     	; 0x18e <initializeSinTable+0x10>
 1f0:	df 91       	pop	r29
 1f2:	cf 91       	pop	r28
 1f4:	08 95       	ret

000001f6 <init>:
void init()
{
	//	--Pins--	//
	//Set standard MOSI, MISO, SCK, SS pins
	PORTC.DIRSET = (1 << PIN0_bp) | (0 << PIN1_bp) | (1 << PIN2_bp) | (1 << PIN3_bp);
 1f6:	8d e0       	ldi	r24, 0x0D	; 13
 1f8:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <__TEXT_REGION_LENGTH__+0x7f4441>
	//Set new SS output for 16Bit transmit
	PORTD.DIRSET = (1 << PIN1_bp);
 1fc:	e0 e6       	ldi	r30, 0x60	; 96
 1fe:	f4 e0       	ldi	r31, 0x04	; 4
 200:	82 e0       	ldi	r24, 0x02	; 2
 202:	81 83       	std	Z+1, r24	; 0x01
	//ADC-Input
	PORTD.DIRSET = (0 << PIN0_bp);
 204:	11 82       	std	Z+1, r1	; 0x01
	
	//Preset SS
	PORTD.OUT |= (1 << PIN1_bp);
 206:	84 81       	ldd	r24, Z+4	; 0x04
 208:	82 60       	ori	r24, 0x02	; 2
 20a:	84 83       	std	Z+4, r24	; 0x04
void initTimerPoti()
{
	/*	---Frquency Waveform Generation: p.191---	*/

	//Set AND ENABLE waveform to Frequency to be able to change the TOP value of timer
	TCA0.SINGLE.CTRLB = TCA_SINGLE_WGMODE_FRQ_gc | TCA_SINGLE_CMP0EN_bm;
 20c:	a0 e0       	ldi	r26, 0x00	; 0
 20e:	ba e0       	ldi	r27, 0x0A	; 10
 210:	81 e1       	ldi	r24, 0x11	; 17
 212:	11 96       	adiw	r26, 0x01	; 1
 214:	8c 93       	st	X, r24
 216:	11 97       	sbiw	r26, 0x01	; 1
	
	//Set this to only count clock ticks and not events
	TCA0.SINGLE.EVCTRL &= ~(TCA_SINGLE_CNTEI_bm);
 218:	19 96       	adiw	r26, 0x09	; 9
 21a:	8c 91       	ld	r24, X
 21c:	19 97       	sbiw	r26, 0x09	; 9
 21e:	8e 7f       	andi	r24, 0xFE	; 254
 220:	19 96       	adiw	r26, 0x09	; 9
 222:	8c 93       	st	X, r24
 224:	19 97       	sbiw	r26, 0x09	; 9
	
	//Set timer to compare			p.207
	//TCA0.SINGLE.INTCTRL = (1 << PIN4_bp);
	TCA0.SINGLE.INTCTRL = TCA_SINGLE_CMP0_bm;
 226:	80 e1       	ldi	r24, 0x10	; 16
 228:	1a 96       	adiw	r26, 0x0a	; 10
 22a:	8c 93       	st	X, r24
 22c:	1a 97       	sbiw	r26, 0x0a	; 10
	
	//16-Bit value of compare-register	p.213
	TCA0.SINGLE.CMP0 = 0x00FF;
 22e:	8f ef       	ldi	r24, 0xFF	; 255
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	98 96       	adiw	r26, 0x28	; 40
 234:	8d 93       	st	X+, r24
 236:	9c 93       	st	X, r25
 238:	99 97       	sbiw	r26, 0x29	; 41
	
	//set prescaler and enable single mode
	TCA0.SINGLE.CTRLA = TCA_SINGLE_CLKSEL_DIV1_gc | TCA_SINGLE_ENABLE_bm;
 23a:	91 e0       	ldi	r25, 0x01	; 1
 23c:	9c 93       	st	X, r25
	
	//	--TIMER1--	//
	initTimerPoti();
	
	//	--SPI--	//
	PORTMUX.TWISPIROUTEA |= PORTMUX_SPI00_bm; //SPI on PORTC[3:0] -> [_SS,SCK,MISO,MOSI]
 23e:	a0 ee       	ldi	r26, 0xE0	; 224
 240:	b5 e0       	ldi	r27, 0x05	; 5
 242:	13 96       	adiw	r26, 0x03	; 3
 244:	8c 91       	ld	r24, X
 246:	13 97       	sbiw	r26, 0x03	; 3
 248:	81 60       	ori	r24, 0x01	; 1
 24a:	13 96       	adiw	r26, 0x03	; 3
 24c:	8c 93       	st	X, r24
	//Controllregister
	SPI0.CTRLA |= SPI_CLK2X_bm /* Double Speed */ | SPI_MASTER_bm /* Set as Master Device */ | SPI_PRESC_DIV4_gc /* CLK Prescaler */| SPI_ENABLE_bm /* SPI enable */ ; 
 24e:	a0 ec       	ldi	r26, 0xC0	; 192
 250:	b8 e0       	ldi	r27, 0x08	; 8
 252:	8c 91       	ld	r24, X
 254:	81 63       	ori	r24, 0x31	; 49
 256:	8c 93       	st	X, r24
	
	//  --ADC-- //
	// PD0 is input by default, but we need to disable its "digital input buffer" and Pull-Up-res
	PORTD.PIN0CTRL &= ~PORT_ISC_gm;
 258:	80 89       	ldd	r24, Z+16	; 0x10
 25a:	88 7f       	andi	r24, 0xF8	; 248
 25c:	80 8b       	std	Z+16, r24	; 0x10
	PORTD.PIN0CTRL |= PORT_ISC_INPUT_DISABLE_gc;
 25e:	80 89       	ldd	r24, Z+16	; 0x10
 260:	84 60       	ori	r24, 0x04	; 4
 262:	80 8b       	std	Z+16, r24	; 0x10
	PORTD.PIN0CTRL &= ~PORT_PULLUPEN_bm;
 264:	80 89       	ldd	r24, Z+16	; 0x10
 266:	87 7f       	andi	r24, 0xF7	; 247
 268:	80 8b       	std	Z+16, r24	; 0x10
	// p.408
	ADC0.CTRLC = ADC_SAMPCAP_bm /* reduced input impdance */ | ADC_REFSEL_VDDREF_gc /*Vdd as reference */ | ADC_PRESC_DIV4_gc /* CLK Prescaler */;
 26a:	e0 e0       	ldi	r30, 0x00	; 0
 26c:	f6 e0       	ldi	r31, 0x06	; 6
 26e:	81 e5       	ldi	r24, 0x51	; 81
 270:	82 83       	std	Z+2, r24	; 0x02
	ADC0.MUXPOS = ADC_MUXPOS_AIN0_gc;	// Select AIN0 (first on PORTD?) as input channel
 272:	16 82       	std	Z+6, r1	; 0x06
	ADC0.CTRLA = ADC_RESSEL_10BIT_gc /* 10-Bit res */ | ADC_ENABLE_bm /* ADC enable */;
 274:	90 83       	st	Z, r25
 276:	08 95       	ret

00000278 <main>:
	TCA0.SINGLE.INTFLAGS = TCA_SINGLE_CMP0_bm;
}

int main(void)
{
	init();
 278:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <init>
	initializeSinTable();
 27c:	0e 94 bf 00 	call	0x17e	; 0x17e <initializeSinTable>
	
	//Enable global Interrupts
	sei();
 280:	78 94       	sei
}

uint16_t getADC10Bit() 
{
	// start an ADC conversion
	ADC0.COMMAND = ADC_STCONV_bm;
 282:	21 e0       	ldi	r18, 0x01	; 1
 284:	20 93 08 06 	sts	0x0608, r18	; 0x800608 <__TEXT_REGION_LENGTH__+0x7f4608>

	// Wait for conversion to finish
	while ( !(ADC0.INTFLAGS & ADC_RESRDY_bm) ){;}
 288:	80 91 0b 06 	lds	r24, 0x060B	; 0x80060b <__TEXT_REGION_LENGTH__+0x7f460b>
 28c:	80 ff       	sbrs	r24, 0
 28e:	fc cf       	rjmp	.-8      	; 0x288 <main+0x10>
	
	return ADC0.RES;
 290:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7f4610>
 294:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7f4611>
	
	while (1)
	{
		//Write full 10Bit to timer1 CMP0-Buffer register
		//Gets written to CMP0 register on next CMP0-interrupt
		TCA0.SINGLE.CMP0BUF = getADC10Bit();
 298:	80 93 38 0a 	sts	0x0A38, r24	; 0x800a38 <__TEXT_REGION_LENGTH__+0x7f4a38>
 29c:	90 93 39 0a 	sts	0x0A39, r25	; 0x800a39 <__TEXT_REGION_LENGTH__+0x7f4a39>
	}
 2a0:	f1 cf       	rjmp	.-30     	; 0x284 <main+0xc>

000002a2 <__subsf3>:
 2a2:	50 58       	subi	r21, 0x80	; 128

000002a4 <__addsf3>:
 2a4:	bb 27       	eor	r27, r27
 2a6:	aa 27       	eor	r26, r26
 2a8:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__addsf3x>
 2ac:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_round>
 2b0:	0e 94 33 02 	call	0x466	; 0x466 <__fp_pscA>
 2b4:	38 f0       	brcs	.+14     	; 0x2c4 <__addsf3+0x20>
 2b6:	0e 94 3a 02 	call	0x474	; 0x474 <__fp_pscB>
 2ba:	20 f0       	brcs	.+8      	; 0x2c4 <__addsf3+0x20>
 2bc:	39 f4       	brne	.+14     	; 0x2cc <__addsf3+0x28>
 2be:	9f 3f       	cpi	r25, 0xFF	; 255
 2c0:	19 f4       	brne	.+6      	; 0x2c8 <__addsf3+0x24>
 2c2:	26 f4       	brtc	.+8      	; 0x2cc <__addsf3+0x28>
 2c4:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_nan>
 2c8:	0e f4       	brtc	.+2      	; 0x2cc <__addsf3+0x28>
 2ca:	e0 95       	com	r30
 2cc:	e7 fb       	bst	r30, 7
 2ce:	0c 94 2a 02 	jmp	0x454	; 0x454 <__fp_inf>

000002d2 <__addsf3x>:
 2d2:	e9 2f       	mov	r30, r25
 2d4:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__fp_split3>
 2d8:	58 f3       	brcs	.-42     	; 0x2b0 <__addsf3+0xc>
 2da:	ba 17       	cp	r27, r26
 2dc:	62 07       	cpc	r22, r18
 2de:	73 07       	cpc	r23, r19
 2e0:	84 07       	cpc	r24, r20
 2e2:	95 07       	cpc	r25, r21
 2e4:	20 f0       	brcs	.+8      	; 0x2ee <__addsf3x+0x1c>
 2e6:	79 f4       	brne	.+30     	; 0x306 <__addsf3x+0x34>
 2e8:	a6 f5       	brtc	.+104    	; 0x352 <__addsf3x+0x80>
 2ea:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_zero>
 2ee:	0e f4       	brtc	.+2      	; 0x2f2 <__addsf3x+0x20>
 2f0:	e0 95       	com	r30
 2f2:	0b 2e       	mov	r0, r27
 2f4:	ba 2f       	mov	r27, r26
 2f6:	a0 2d       	mov	r26, r0
 2f8:	0b 01       	movw	r0, r22
 2fa:	b9 01       	movw	r22, r18
 2fc:	90 01       	movw	r18, r0
 2fe:	0c 01       	movw	r0, r24
 300:	ca 01       	movw	r24, r20
 302:	a0 01       	movw	r20, r0
 304:	11 24       	eor	r1, r1
 306:	ff 27       	eor	r31, r31
 308:	59 1b       	sub	r21, r25
 30a:	99 f0       	breq	.+38     	; 0x332 <__addsf3x+0x60>
 30c:	59 3f       	cpi	r21, 0xF9	; 249
 30e:	50 f4       	brcc	.+20     	; 0x324 <__addsf3x+0x52>
 310:	50 3e       	cpi	r21, 0xE0	; 224
 312:	68 f1       	brcs	.+90     	; 0x36e <__addsf3x+0x9c>
 314:	1a 16       	cp	r1, r26
 316:	f0 40       	sbci	r31, 0x00	; 0
 318:	a2 2f       	mov	r26, r18
 31a:	23 2f       	mov	r18, r19
 31c:	34 2f       	mov	r19, r20
 31e:	44 27       	eor	r20, r20
 320:	58 5f       	subi	r21, 0xF8	; 248
 322:	f3 cf       	rjmp	.-26     	; 0x30a <__addsf3x+0x38>
 324:	46 95       	lsr	r20
 326:	37 95       	ror	r19
 328:	27 95       	ror	r18
 32a:	a7 95       	ror	r26
 32c:	f0 40       	sbci	r31, 0x00	; 0
 32e:	53 95       	inc	r21
 330:	c9 f7       	brne	.-14     	; 0x324 <__addsf3x+0x52>
 332:	7e f4       	brtc	.+30     	; 0x352 <__addsf3x+0x80>
 334:	1f 16       	cp	r1, r31
 336:	ba 0b       	sbc	r27, r26
 338:	62 0b       	sbc	r22, r18
 33a:	73 0b       	sbc	r23, r19
 33c:	84 0b       	sbc	r24, r20
 33e:	ba f0       	brmi	.+46     	; 0x36e <__addsf3x+0x9c>
 340:	91 50       	subi	r25, 0x01	; 1
 342:	a1 f0       	breq	.+40     	; 0x36c <__addsf3x+0x9a>
 344:	ff 0f       	add	r31, r31
 346:	bb 1f       	adc	r27, r27
 348:	66 1f       	adc	r22, r22
 34a:	77 1f       	adc	r23, r23
 34c:	88 1f       	adc	r24, r24
 34e:	c2 f7       	brpl	.-16     	; 0x340 <__addsf3x+0x6e>
 350:	0e c0       	rjmp	.+28     	; 0x36e <__addsf3x+0x9c>
 352:	ba 0f       	add	r27, r26
 354:	62 1f       	adc	r22, r18
 356:	73 1f       	adc	r23, r19
 358:	84 1f       	adc	r24, r20
 35a:	48 f4       	brcc	.+18     	; 0x36e <__addsf3x+0x9c>
 35c:	87 95       	ror	r24
 35e:	77 95       	ror	r23
 360:	67 95       	ror	r22
 362:	b7 95       	ror	r27
 364:	f7 95       	ror	r31
 366:	9e 3f       	cpi	r25, 0xFE	; 254
 368:	08 f0       	brcs	.+2      	; 0x36c <__addsf3x+0x9a>
 36a:	b0 cf       	rjmp	.-160    	; 0x2cc <__addsf3+0x28>
 36c:	93 95       	inc	r25
 36e:	88 0f       	add	r24, r24
 370:	08 f0       	brcs	.+2      	; 0x374 <__addsf3x+0xa2>
 372:	99 27       	eor	r25, r25
 374:	ee 0f       	add	r30, r30
 376:	97 95       	ror	r25
 378:	87 95       	ror	r24
 37a:	08 95       	ret

0000037c <__fixunssfsi>:
 37c:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__fp_splitA>
 380:	88 f0       	brcs	.+34     	; 0x3a4 <__fixunssfsi+0x28>
 382:	9f 57       	subi	r25, 0x7F	; 127
 384:	98 f0       	brcs	.+38     	; 0x3ac <__fixunssfsi+0x30>
 386:	b9 2f       	mov	r27, r25
 388:	99 27       	eor	r25, r25
 38a:	b7 51       	subi	r27, 0x17	; 23
 38c:	b0 f0       	brcs	.+44     	; 0x3ba <__fixunssfsi+0x3e>
 38e:	e1 f0       	breq	.+56     	; 0x3c8 <__fixunssfsi+0x4c>
 390:	66 0f       	add	r22, r22
 392:	77 1f       	adc	r23, r23
 394:	88 1f       	adc	r24, r24
 396:	99 1f       	adc	r25, r25
 398:	1a f0       	brmi	.+6      	; 0x3a0 <__fixunssfsi+0x24>
 39a:	ba 95       	dec	r27
 39c:	c9 f7       	brne	.-14     	; 0x390 <__fixunssfsi+0x14>
 39e:	14 c0       	rjmp	.+40     	; 0x3c8 <__fixunssfsi+0x4c>
 3a0:	b1 30       	cpi	r27, 0x01	; 1
 3a2:	91 f0       	breq	.+36     	; 0x3c8 <__fixunssfsi+0x4c>
 3a4:	0e 94 74 02 	call	0x4e8	; 0x4e8 <__fp_zero>
 3a8:	b1 e0       	ldi	r27, 0x01	; 1
 3aa:	08 95       	ret
 3ac:	0c 94 74 02 	jmp	0x4e8	; 0x4e8 <__fp_zero>
 3b0:	67 2f       	mov	r22, r23
 3b2:	78 2f       	mov	r23, r24
 3b4:	88 27       	eor	r24, r24
 3b6:	b8 5f       	subi	r27, 0xF8	; 248
 3b8:	39 f0       	breq	.+14     	; 0x3c8 <__fixunssfsi+0x4c>
 3ba:	b9 3f       	cpi	r27, 0xF9	; 249
 3bc:	cc f3       	brlt	.-14     	; 0x3b0 <__fixunssfsi+0x34>
 3be:	86 95       	lsr	r24
 3c0:	77 95       	ror	r23
 3c2:	67 95       	ror	r22
 3c4:	b3 95       	inc	r27
 3c6:	d9 f7       	brne	.-10     	; 0x3be <__fixunssfsi+0x42>
 3c8:	3e f4       	brtc	.+14     	; 0x3d8 <__fixunssfsi+0x5c>
 3ca:	90 95       	com	r25
 3cc:	80 95       	com	r24
 3ce:	70 95       	com	r23
 3d0:	61 95       	neg	r22
 3d2:	7f 4f       	sbci	r23, 0xFF	; 255
 3d4:	8f 4f       	sbci	r24, 0xFF	; 255
 3d6:	9f 4f       	sbci	r25, 0xFF	; 255
 3d8:	08 95       	ret

000003da <__floatunsisf>:
 3da:	e8 94       	clt
 3dc:	09 c0       	rjmp	.+18     	; 0x3f0 <__floatsisf+0x12>

000003de <__floatsisf>:
 3de:	97 fb       	bst	r25, 7
 3e0:	3e f4       	brtc	.+14     	; 0x3f0 <__floatsisf+0x12>
 3e2:	90 95       	com	r25
 3e4:	80 95       	com	r24
 3e6:	70 95       	com	r23
 3e8:	61 95       	neg	r22
 3ea:	7f 4f       	sbci	r23, 0xFF	; 255
 3ec:	8f 4f       	sbci	r24, 0xFF	; 255
 3ee:	9f 4f       	sbci	r25, 0xFF	; 255
 3f0:	99 23       	and	r25, r25
 3f2:	a9 f0       	breq	.+42     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3f4:	f9 2f       	mov	r31, r25
 3f6:	96 e9       	ldi	r25, 0x96	; 150
 3f8:	bb 27       	eor	r27, r27
 3fa:	93 95       	inc	r25
 3fc:	f6 95       	lsr	r31
 3fe:	87 95       	ror	r24
 400:	77 95       	ror	r23
 402:	67 95       	ror	r22
 404:	b7 95       	ror	r27
 406:	f1 11       	cpse	r31, r1
 408:	f8 cf       	rjmp	.-16     	; 0x3fa <__floatsisf+0x1c>
 40a:	fa f4       	brpl	.+62     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 40c:	bb 0f       	add	r27, r27
 40e:	11 f4       	brne	.+4      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 410:	60 ff       	sbrs	r22, 0
 412:	1b c0       	rjmp	.+54     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 414:	6f 5f       	subi	r22, 0xFF	; 255
 416:	7f 4f       	sbci	r23, 0xFF	; 255
 418:	8f 4f       	sbci	r24, 0xFF	; 255
 41a:	9f 4f       	sbci	r25, 0xFF	; 255
 41c:	16 c0       	rjmp	.+44     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 41e:	88 23       	and	r24, r24
 420:	11 f0       	breq	.+4      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 422:	96 e9       	ldi	r25, 0x96	; 150
 424:	11 c0       	rjmp	.+34     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 426:	77 23       	and	r23, r23
 428:	21 f0       	breq	.+8      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 42a:	9e e8       	ldi	r25, 0x8E	; 142
 42c:	87 2f       	mov	r24, r23
 42e:	76 2f       	mov	r23, r22
 430:	05 c0       	rjmp	.+10     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 432:	66 23       	and	r22, r22
 434:	71 f0       	breq	.+28     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 436:	96 e8       	ldi	r25, 0x86	; 134
 438:	86 2f       	mov	r24, r22
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	60 e0       	ldi	r22, 0x00	; 0
 43e:	2a f0       	brmi	.+10     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 440:	9a 95       	dec	r25
 442:	66 0f       	add	r22, r22
 444:	77 1f       	adc	r23, r23
 446:	88 1f       	adc	r24, r24
 448:	da f7       	brpl	.-10     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 44a:	88 0f       	add	r24, r24
 44c:	96 95       	lsr	r25
 44e:	87 95       	ror	r24
 450:	97 f9       	bld	r25, 7
 452:	08 95       	ret

00000454 <__fp_inf>:
 454:	97 f9       	bld	r25, 7
 456:	9f 67       	ori	r25, 0x7F	; 127
 458:	80 e8       	ldi	r24, 0x80	; 128
 45a:	70 e0       	ldi	r23, 0x00	; 0
 45c:	60 e0       	ldi	r22, 0x00	; 0
 45e:	08 95       	ret

00000460 <__fp_nan>:
 460:	9f ef       	ldi	r25, 0xFF	; 255
 462:	80 ec       	ldi	r24, 0xC0	; 192
 464:	08 95       	ret

00000466 <__fp_pscA>:
 466:	00 24       	eor	r0, r0
 468:	0a 94       	dec	r0
 46a:	16 16       	cp	r1, r22
 46c:	17 06       	cpc	r1, r23
 46e:	18 06       	cpc	r1, r24
 470:	09 06       	cpc	r0, r25
 472:	08 95       	ret

00000474 <__fp_pscB>:
 474:	00 24       	eor	r0, r0
 476:	0a 94       	dec	r0
 478:	12 16       	cp	r1, r18
 47a:	13 06       	cpc	r1, r19
 47c:	14 06       	cpc	r1, r20
 47e:	05 06       	cpc	r0, r21
 480:	08 95       	ret

00000482 <__fp_round>:
 482:	09 2e       	mov	r0, r25
 484:	03 94       	inc	r0
 486:	00 0c       	add	r0, r0
 488:	11 f4       	brne	.+4      	; 0x48e <__fp_round+0xc>
 48a:	88 23       	and	r24, r24
 48c:	52 f0       	brmi	.+20     	; 0x4a2 <__fp_round+0x20>
 48e:	bb 0f       	add	r27, r27
 490:	40 f4       	brcc	.+16     	; 0x4a2 <__fp_round+0x20>
 492:	bf 2b       	or	r27, r31
 494:	11 f4       	brne	.+4      	; 0x49a <__fp_round+0x18>
 496:	60 ff       	sbrs	r22, 0
 498:	04 c0       	rjmp	.+8      	; 0x4a2 <__fp_round+0x20>
 49a:	6f 5f       	subi	r22, 0xFF	; 255
 49c:	7f 4f       	sbci	r23, 0xFF	; 255
 49e:	8f 4f       	sbci	r24, 0xFF	; 255
 4a0:	9f 4f       	sbci	r25, 0xFF	; 255
 4a2:	08 95       	ret

000004a4 <__fp_split3>:
 4a4:	57 fd       	sbrc	r21, 7
 4a6:	90 58       	subi	r25, 0x80	; 128
 4a8:	44 0f       	add	r20, r20
 4aa:	55 1f       	adc	r21, r21
 4ac:	59 f0       	breq	.+22     	; 0x4c4 <__fp_splitA+0x10>
 4ae:	5f 3f       	cpi	r21, 0xFF	; 255
 4b0:	71 f0       	breq	.+28     	; 0x4ce <__fp_splitA+0x1a>
 4b2:	47 95       	ror	r20

000004b4 <__fp_splitA>:
 4b4:	88 0f       	add	r24, r24
 4b6:	97 fb       	bst	r25, 7
 4b8:	99 1f       	adc	r25, r25
 4ba:	61 f0       	breq	.+24     	; 0x4d4 <__fp_splitA+0x20>
 4bc:	9f 3f       	cpi	r25, 0xFF	; 255
 4be:	79 f0       	breq	.+30     	; 0x4de <__fp_splitA+0x2a>
 4c0:	87 95       	ror	r24
 4c2:	08 95       	ret
 4c4:	12 16       	cp	r1, r18
 4c6:	13 06       	cpc	r1, r19
 4c8:	14 06       	cpc	r1, r20
 4ca:	55 1f       	adc	r21, r21
 4cc:	f2 cf       	rjmp	.-28     	; 0x4b2 <__fp_split3+0xe>
 4ce:	46 95       	lsr	r20
 4d0:	f1 df       	rcall	.-30     	; 0x4b4 <__fp_splitA>
 4d2:	08 c0       	rjmp	.+16     	; 0x4e4 <__fp_splitA+0x30>
 4d4:	16 16       	cp	r1, r22
 4d6:	17 06       	cpc	r1, r23
 4d8:	18 06       	cpc	r1, r24
 4da:	99 1f       	adc	r25, r25
 4dc:	f1 cf       	rjmp	.-30     	; 0x4c0 <__fp_splitA+0xc>
 4de:	86 95       	lsr	r24
 4e0:	71 05       	cpc	r23, r1
 4e2:	61 05       	cpc	r22, r1
 4e4:	08 94       	sec
 4e6:	08 95       	ret

000004e8 <__fp_zero>:
 4e8:	e8 94       	clt

000004ea <__fp_szero>:
 4ea:	bb 27       	eor	r27, r27
 4ec:	66 27       	eor	r22, r22
 4ee:	77 27       	eor	r23, r23
 4f0:	cb 01       	movw	r24, r22
 4f2:	97 f9       	bld	r25, 7
 4f4:	08 95       	ret

000004f6 <__mulsf3>:
 4f6:	0e 94 8e 02 	call	0x51c	; 0x51c <__mulsf3x>
 4fa:	0c 94 41 02 	jmp	0x482	; 0x482 <__fp_round>
 4fe:	0e 94 33 02 	call	0x466	; 0x466 <__fp_pscA>
 502:	38 f0       	brcs	.+14     	; 0x512 <__mulsf3+0x1c>
 504:	0e 94 3a 02 	call	0x474	; 0x474 <__fp_pscB>
 508:	20 f0       	brcs	.+8      	; 0x512 <__mulsf3+0x1c>
 50a:	95 23       	and	r25, r21
 50c:	11 f0       	breq	.+4      	; 0x512 <__mulsf3+0x1c>
 50e:	0c 94 2a 02 	jmp	0x454	; 0x454 <__fp_inf>
 512:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_nan>
 516:	11 24       	eor	r1, r1
 518:	0c 94 75 02 	jmp	0x4ea	; 0x4ea <__fp_szero>

0000051c <__mulsf3x>:
 51c:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__fp_split3>
 520:	70 f3       	brcs	.-36     	; 0x4fe <__mulsf3+0x8>

00000522 <__mulsf3_pse>:
 522:	95 9f       	mul	r25, r21
 524:	c1 f3       	breq	.-16     	; 0x516 <__mulsf3+0x20>
 526:	95 0f       	add	r25, r21
 528:	50 e0       	ldi	r21, 0x00	; 0
 52a:	55 1f       	adc	r21, r21
 52c:	62 9f       	mul	r22, r18
 52e:	f0 01       	movw	r30, r0
 530:	72 9f       	mul	r23, r18
 532:	bb 27       	eor	r27, r27
 534:	f0 0d       	add	r31, r0
 536:	b1 1d       	adc	r27, r1
 538:	63 9f       	mul	r22, r19
 53a:	aa 27       	eor	r26, r26
 53c:	f0 0d       	add	r31, r0
 53e:	b1 1d       	adc	r27, r1
 540:	aa 1f       	adc	r26, r26
 542:	64 9f       	mul	r22, r20
 544:	66 27       	eor	r22, r22
 546:	b0 0d       	add	r27, r0
 548:	a1 1d       	adc	r26, r1
 54a:	66 1f       	adc	r22, r22
 54c:	82 9f       	mul	r24, r18
 54e:	22 27       	eor	r18, r18
 550:	b0 0d       	add	r27, r0
 552:	a1 1d       	adc	r26, r1
 554:	62 1f       	adc	r22, r18
 556:	73 9f       	mul	r23, r19
 558:	b0 0d       	add	r27, r0
 55a:	a1 1d       	adc	r26, r1
 55c:	62 1f       	adc	r22, r18
 55e:	83 9f       	mul	r24, r19
 560:	a0 0d       	add	r26, r0
 562:	61 1d       	adc	r22, r1
 564:	22 1f       	adc	r18, r18
 566:	74 9f       	mul	r23, r20
 568:	33 27       	eor	r19, r19
 56a:	a0 0d       	add	r26, r0
 56c:	61 1d       	adc	r22, r1
 56e:	23 1f       	adc	r18, r19
 570:	84 9f       	mul	r24, r20
 572:	60 0d       	add	r22, r0
 574:	21 1d       	adc	r18, r1
 576:	82 2f       	mov	r24, r18
 578:	76 2f       	mov	r23, r22
 57a:	6a 2f       	mov	r22, r26
 57c:	11 24       	eor	r1, r1
 57e:	9f 57       	subi	r25, 0x7F	; 127
 580:	50 40       	sbci	r21, 0x00	; 0
 582:	9a f0       	brmi	.+38     	; 0x5aa <__mulsf3_pse+0x88>
 584:	f1 f0       	breq	.+60     	; 0x5c2 <__mulsf3_pse+0xa0>
 586:	88 23       	and	r24, r24
 588:	4a f0       	brmi	.+18     	; 0x59c <__mulsf3_pse+0x7a>
 58a:	ee 0f       	add	r30, r30
 58c:	ff 1f       	adc	r31, r31
 58e:	bb 1f       	adc	r27, r27
 590:	66 1f       	adc	r22, r22
 592:	77 1f       	adc	r23, r23
 594:	88 1f       	adc	r24, r24
 596:	91 50       	subi	r25, 0x01	; 1
 598:	50 40       	sbci	r21, 0x00	; 0
 59a:	a9 f7       	brne	.-22     	; 0x586 <__mulsf3_pse+0x64>
 59c:	9e 3f       	cpi	r25, 0xFE	; 254
 59e:	51 05       	cpc	r21, r1
 5a0:	80 f0       	brcs	.+32     	; 0x5c2 <__mulsf3_pse+0xa0>
 5a2:	0c 94 2a 02 	jmp	0x454	; 0x454 <__fp_inf>
 5a6:	0c 94 75 02 	jmp	0x4ea	; 0x4ea <__fp_szero>
 5aa:	5f 3f       	cpi	r21, 0xFF	; 255
 5ac:	e4 f3       	brlt	.-8      	; 0x5a6 <__mulsf3_pse+0x84>
 5ae:	98 3e       	cpi	r25, 0xE8	; 232
 5b0:	d4 f3       	brlt	.-12     	; 0x5a6 <__mulsf3_pse+0x84>
 5b2:	86 95       	lsr	r24
 5b4:	77 95       	ror	r23
 5b6:	67 95       	ror	r22
 5b8:	b7 95       	ror	r27
 5ba:	f7 95       	ror	r31
 5bc:	e7 95       	ror	r30
 5be:	9f 5f       	subi	r25, 0xFF	; 255
 5c0:	c1 f7       	brne	.-16     	; 0x5b2 <__mulsf3_pse+0x90>
 5c2:	fe 2b       	or	r31, r30
 5c4:	88 0f       	add	r24, r24
 5c6:	91 1d       	adc	r25, r1
 5c8:	96 95       	lsr	r25
 5ca:	87 95       	ror	r24
 5cc:	97 f9       	bld	r25, 7
 5ce:	08 95       	ret

000005d0 <sin>:
 5d0:	9f 93       	push	r25
 5d2:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <__fp_rempio2>
 5d6:	0f 90       	pop	r0
 5d8:	07 fc       	sbrc	r0, 7
 5da:	ee 5f       	subi	r30, 0xFE	; 254
 5dc:	0c 94 1b 03 	jmp	0x636	; 0x636 <__fp_sinus>
 5e0:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_nan>

000005e4 <__fp_rempio2>:
 5e4:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__fp_splitA>
 5e8:	d8 f3       	brcs	.-10     	; 0x5e0 <sin+0x10>
 5ea:	e8 94       	clt
 5ec:	e0 e0       	ldi	r30, 0x00	; 0
 5ee:	bb 27       	eor	r27, r27
 5f0:	9f 57       	subi	r25, 0x7F	; 127
 5f2:	f0 f0       	brcs	.+60     	; 0x630 <__fp_rempio2+0x4c>
 5f4:	2a ed       	ldi	r18, 0xDA	; 218
 5f6:	3f e0       	ldi	r19, 0x0F	; 15
 5f8:	49 ec       	ldi	r20, 0xC9	; 201
 5fa:	06 c0       	rjmp	.+12     	; 0x608 <__fp_rempio2+0x24>
 5fc:	ee 0f       	add	r30, r30
 5fe:	bb 0f       	add	r27, r27
 600:	66 1f       	adc	r22, r22
 602:	77 1f       	adc	r23, r23
 604:	88 1f       	adc	r24, r24
 606:	28 f0       	brcs	.+10     	; 0x612 <__fp_rempio2+0x2e>
 608:	b2 3a       	cpi	r27, 0xA2	; 162
 60a:	62 07       	cpc	r22, r18
 60c:	73 07       	cpc	r23, r19
 60e:	84 07       	cpc	r24, r20
 610:	28 f0       	brcs	.+10     	; 0x61c <__fp_rempio2+0x38>
 612:	b2 5a       	subi	r27, 0xA2	; 162
 614:	62 0b       	sbc	r22, r18
 616:	73 0b       	sbc	r23, r19
 618:	84 0b       	sbc	r24, r20
 61a:	e3 95       	inc	r30
 61c:	9a 95       	dec	r25
 61e:	72 f7       	brpl	.-36     	; 0x5fc <__fp_rempio2+0x18>
 620:	80 38       	cpi	r24, 0x80	; 128
 622:	30 f4       	brcc	.+12     	; 0x630 <__fp_rempio2+0x4c>
 624:	9a 95       	dec	r25
 626:	bb 0f       	add	r27, r27
 628:	66 1f       	adc	r22, r22
 62a:	77 1f       	adc	r23, r23
 62c:	88 1f       	adc	r24, r24
 62e:	d2 f7       	brpl	.-12     	; 0x624 <__fp_rempio2+0x40>
 630:	90 48       	sbci	r25, 0x80	; 128
 632:	0c 94 31 03 	jmp	0x662	; 0x662 <__fp_mpack_finite>

00000636 <__fp_sinus>:
 636:	ef 93       	push	r30
 638:	e0 ff       	sbrs	r30, 0
 63a:	07 c0       	rjmp	.+14     	; 0x64a <__fp_sinus+0x14>
 63c:	a2 ea       	ldi	r26, 0xA2	; 162
 63e:	2a ed       	ldi	r18, 0xDA	; 218
 640:	3f e0       	ldi	r19, 0x0F	; 15
 642:	49 ec       	ldi	r20, 0xC9	; 201
 644:	5f eb       	ldi	r21, 0xBF	; 191
 646:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__addsf3x>
 64a:	0e 94 41 02 	call	0x482	; 0x482 <__fp_round>
 64e:	0f 90       	pop	r0
 650:	03 94       	inc	r0
 652:	01 fc       	sbrc	r0, 1
 654:	90 58       	subi	r25, 0x80	; 128
 656:	e0 ea       	ldi	r30, 0xA0	; 160
 658:	f0 e0       	ldi	r31, 0x00	; 0
 65a:	0c 94 3d 03 	jmp	0x67a	; 0x67a <__fp_powsodd>

0000065e <__fp_mpack>:
 65e:	9f 3f       	cpi	r25, 0xFF	; 255
 660:	31 f0       	breq	.+12     	; 0x66e <__fp_mpack_finite+0xc>

00000662 <__fp_mpack_finite>:
 662:	91 50       	subi	r25, 0x01	; 1
 664:	20 f4       	brcc	.+8      	; 0x66e <__fp_mpack_finite+0xc>
 666:	87 95       	ror	r24
 668:	77 95       	ror	r23
 66a:	67 95       	ror	r22
 66c:	b7 95       	ror	r27
 66e:	88 0f       	add	r24, r24
 670:	91 1d       	adc	r25, r1
 672:	96 95       	lsr	r25
 674:	87 95       	ror	r24
 676:	97 f9       	bld	r25, 7
 678:	08 95       	ret

0000067a <__fp_powsodd>:
 67a:	9f 93       	push	r25
 67c:	8f 93       	push	r24
 67e:	7f 93       	push	r23
 680:	6f 93       	push	r22
 682:	ff 93       	push	r31
 684:	ef 93       	push	r30
 686:	9b 01       	movw	r18, r22
 688:	ac 01       	movw	r20, r24
 68a:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__mulsf3>
 68e:	ef 91       	pop	r30
 690:	ff 91       	pop	r31
 692:	0e 94 51 03 	call	0x6a2	; 0x6a2 <__fp_powser>
 696:	2f 91       	pop	r18
 698:	3f 91       	pop	r19
 69a:	4f 91       	pop	r20
 69c:	5f 91       	pop	r21
 69e:	0c 94 7b 02 	jmp	0x4f6	; 0x4f6 <__mulsf3>

000006a2 <__fp_powser>:
 6a2:	df 93       	push	r29
 6a4:	cf 93       	push	r28
 6a6:	1f 93       	push	r17
 6a8:	0f 93       	push	r16
 6aa:	ff 92       	push	r15
 6ac:	ef 92       	push	r14
 6ae:	df 92       	push	r13
 6b0:	7b 01       	movw	r14, r22
 6b2:	8c 01       	movw	r16, r24
 6b4:	68 94       	set
 6b6:	06 c0       	rjmp	.+12     	; 0x6c4 <__fp_powser+0x22>
 6b8:	da 2e       	mov	r13, r26
 6ba:	ef 01       	movw	r28, r30
 6bc:	0e 94 8e 02 	call	0x51c	; 0x51c <__mulsf3x>
 6c0:	fe 01       	movw	r30, r28
 6c2:	e8 94       	clt
 6c4:	a5 91       	lpm	r26, Z+
 6c6:	25 91       	lpm	r18, Z+
 6c8:	35 91       	lpm	r19, Z+
 6ca:	45 91       	lpm	r20, Z+
 6cc:	55 91       	lpm	r21, Z+
 6ce:	a6 f3       	brts	.-24     	; 0x6b8 <__fp_powser+0x16>
 6d0:	ef 01       	movw	r28, r30
 6d2:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__addsf3x>
 6d6:	fe 01       	movw	r30, r28
 6d8:	97 01       	movw	r18, r14
 6da:	a8 01       	movw	r20, r16
 6dc:	da 94       	dec	r13
 6de:	69 f7       	brne	.-38     	; 0x6ba <__fp_powser+0x18>
 6e0:	df 90       	pop	r13
 6e2:	ef 90       	pop	r14
 6e4:	ff 90       	pop	r15
 6e6:	0f 91       	pop	r16
 6e8:	1f 91       	pop	r17
 6ea:	cf 91       	pop	r28
 6ec:	df 91       	pop	r29
 6ee:	08 95       	ret

000006f0 <_exit>:
 6f0:	f8 94       	cli

000006f2 <__stop_program>:
 6f2:	ff cf       	rjmp	.-2      	; 0x6f2 <__stop_program>
